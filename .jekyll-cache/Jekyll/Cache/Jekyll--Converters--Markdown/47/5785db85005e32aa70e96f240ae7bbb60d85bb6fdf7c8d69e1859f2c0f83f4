I"<h3 id="소프트웨어-개발-방법론">소프트웨어 개발 방법론</h3>
<p><strong>개요</strong></p>
<ul>
  <li>목적: 소프트웨어의 생산성과 품질 향상</li>
  <li>종류: 구조적 방법론, 정보공학 방법론, 객체지향 방법론, 컴포넌트 기반(CBD) 방법론, 애자일(Agile) 방법론, 제품 계열 방법론이 있다.
<br /><br />
<strong>구조적 방법론</strong></li>
  <li>사용자 요구사항을 파악하여 문서화하는 처리 중심의 방법론</li>
  <li>복잡한 문제를 다루기 위해 분할과 정복 원리를 적용
<br /><br />
<strong>정보공학 방법론</strong></li>
  <li>정보 시스템의 개발을 위해 상호 연관성 있게 통합 및 적용하는 <code class="language-html highlighter-rouge">자료 중심</code>의 방법론</li>
  <li>개발 주기를 이용하여 대규모 정보 시스템을 구축하는데 적합
<br /><br />
<strong>객체지향 방법론</strong></li>
  <li>객체들을 조립해서 필요한 소프트웨어를 구현하는 방법론</li>
  <li>기본 원칙: 캡슐화, 정보 은닉, 추상호, 상속성, 다형성 등이 있다.
<br /><br />
<strong>컴포넌트 기반</strong></li>
  <li>컴포넌트를 조합하여 하나의 새로운 어플리케이션을 만드는 방법론.</li>
  <li>컴포넌트의 재사용이 가능하여 시간과 노력을 절감, 유지 보스 비용 최소화, 생산성 및 품질을 향상시킬 수 있다.
<br /><br />
<strong>애자일(Agile) 방법론</strong></li>
  <li>고객의 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하며 개발을 진행하는 방법론</li>
  <li>소규모 프로젝트, 급변하는 요구사항에 적합하다.
<br /><br />
<strong>제품 계열 방법론</strong></li>
  <li>특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발하는 방법론.</li>
  <li>임베디드 소프트웨어를 만드는데 적합하다.</li>
  <li>영역공확과 응용공학으로 구분된다.</li>
</ul>
:ET