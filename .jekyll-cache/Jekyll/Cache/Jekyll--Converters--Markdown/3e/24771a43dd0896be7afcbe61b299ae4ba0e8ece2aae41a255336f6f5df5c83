I")<p>Loss란 정답과 예측값 간의 차이 –&gt; 목적은 예측값이 정답과 같게 되는 것 즉 Loss를 0으로 만드는게 궁극적 목표.</p>

<hr />

<h3 id="mean-square-error평균제곱오차">Mean Square Error(평균제곱오차)</h3>

<p>
(예측값 - 정답)에 제곱을 해준 값을 에러 값으로 판단하는 방식. 
<br />
<br />

</p>
<hr />

<h3 id="cost-function">Cost function</h3>

<p>
Cross Entropy는 Classification 문제에서 주로 사용되는 Cost function 이다.
이에 파생되어 binary cross entropy 는 이진 분류에서 사용된다.
반대로 MSE(평균제곱오차)는 주로 Regression 문제에서 사용된다.

Cross entropy 값은 실제값과 예측값이 같을 경우 0으로 수렴하지만, 차가 커질 경우 무한대로 발산한다.
그래서 Cross entropy를 loss function으로 두어 활용한다.

</p>
<p>
위에서 언급하였듯이 Transformer는 기존 RNN 혹은 LSTM의 순차적 처리 구조가 아닌 병렬식 처리 구조이다.
기존 RNN에서는 문장의 단어의 위치 및 순서 정보를 잘 활용해 자연어처리에서 널리 사용되었으나 Transformer는 Positional Encoding 즉 인코더 및 디코더 입력 값마다 상대적 위치정보를 그대로 더해준다는 것이 그 차이점이다.
</p>

<hr />

<h3 id="loss-function">loss function</h3>

<p>
loss function은 파라미터 최적화(cost를 0으로 만들기 위한)를 위한 목적 함수이다.
loss function는 목적에 따라 다르게 선택된다.(classification인지 regression인지)
</p>
:ET